version: '3.9'

services:
  redis:
    container_name: redis-blog
    image: redis
    restart: always
    ports: 
    - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  db:
    container_name: db-blog
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - envs/stage/db/.env
    ports:
      - "5432:5432"
    restart: always

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: backend
    command: sh -c "python3 manage.py check --database default && \
                    python3 manage.py makemigrations --noinput && \
                    python3 manage.py migrate --noinput && \
                    python3 manage.py collectstatic --noinput && \
                    python3 manage.py insert_data && \
                    gunicorn --bind 0.0.0.0:8000 core.wsgi:application"
    volumes:
      - ./core/:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - envs/stage/django/.env
    expose:
      - "8000"
    depends_on:
      - redis
      - db

  nginx:
    image: nginx
    container_name: nginx-blog
    restart: always
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    ports:
      - "80:80"
    depends_on:
      - redis
      - backend
      - db

  worker:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core/:/app
    depends_on:
      - redis
      - backend
      - db

  celery-beat:
    build: .
    command: celery -A core beat --loglevel=info
    volumes:
      - ./core/:/app
    depends_on:
      - redis
      - backend
      - worker

volumes:
  static_volume:
  media_volume:
  postgres_data: