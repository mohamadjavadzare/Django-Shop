version: "3.9"

services:
  redis:
    container_name: redis-blog
    image: redis
    restart: always
    ports: 
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  db:
    container_name: db
    image: postgres:15-alpine
    volumes:
      - /postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./dockerfiles/dev/django/Dockerfile
    volumes: 
      - ./core:/usr/src/app
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    working_dir: /usr/src/app
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
    env_file:
      - ./envs/dev/django/.env
    restart: always
    depends_on:
      - redis
      - db

  worker:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/django/Dockerfile
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend
      - db

  celery-beat:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/django/Dockerfile
    command: celery -A core beat --loglevel=info
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend
      - worker

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - "5000:80"
      - "25:25"
      - "143:143"
    volumes:
      - smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions__HostName=smtp4dev

volumes:
  smtp4dev-data:
  static_volume:
  media_volume:
